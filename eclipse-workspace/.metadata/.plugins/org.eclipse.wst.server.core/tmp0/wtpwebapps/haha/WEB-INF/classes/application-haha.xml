<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context.xsd  
                        http://www.springframework.org/schema/mvc
            			http://www.springframework.org/schema/mvc/spring-mvc.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd
                        http://www.springframework.org/schema/aop
                        http://www.springframework.org/schema/aop/spring-aop.xsd
         			">
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.cy.test.service.rocedar" />
	<context:component-scan base-package="com.cy.test.service.huanyi" />
	
	   <!-- 引入配置文件 -->
    <bean id="propertyConfigurer"
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:haha.properties" />
    </bean>
    
    <!--数据库连接-fangzhou start-->  
    <bean id="dataSource_dongya" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
        <property name="url" value="${jdbc.url.dongya}" />  
        <property name="username" value="${jdbc.username.dongya}"/>  
        <property name="password" value="${jdbc.password.dongya}"/>  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize"><value>1</value></property>  
        <property name="maxActive"><value>5</value></property>  
        <property name="minIdle"><value>1</value></property>  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait"><value>60000</value></property>  
        <!-- 配置监控统计拦截的filters -->  
        <property name="filters"><value>stat</value></property>  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis"><value>300000</value></property>  
        <!--  
        <property name="validationQuery"><value>SELECT 'x'</value></property>  
        <property name="testWhileIdle"><value>true</value></property>  
        <property name="testOnBorrow"><value>false</value></property>  
        <property name="testOnReturn"><value>false</value></property>  
        <property name="poolPreparedStatements"><value>true</value></property>  
        <property name="maxOpenPreparedStatements"><value>20</value></property>  
         -->  
    </bean>
    
        <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory_dongya" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_dongya" />
        <property name="configLocation" value="classpath:application-mybatis.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
    </bean>
    
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cy.test.dao.rocedar" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_dongya"></property>
    </bean>
    <!--数据库连接-dongya end-->


    <!--数据库连接-fangzhou start-->  
    <bean id="dataSource_fangzhou" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">   
        <property name="url" value="${jdbc.url.fangzhou}" />  
        <property name="username" value="${jdbc.username.fangzhou}"/>  
        <property name="password" value="${jdbc.password.fangzhou}"/>  
        <!-- 配置初始化大小、最小、最大 -->  
        <property name="initialSize"><value>1</value></property>  
        <property name="maxActive"><value>5</value></property>  
        <property name="minIdle"><value>1</value></property>  
        <!-- 配置获取连接等待超时的时间 -->  
        <property name="maxWait"><value>60000</value></property>  
        <!-- 配置监控统计拦截的filters -->  
        <property name="filters"><value>stat</value></property>  
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->  
        <property name="timeBetweenEvictionRunsMillis"><value>60000</value></property>  
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->  
        <property name="minEvictableIdleTimeMillis"><value>300000</value></property>  
        <!--  
        <property name="validationQuery"><value>SELECT 'x'</value></property>  
        <property name="testWhileIdle"><value>true</value></property>  
        <property name="testOnBorrow"><value>false</value></property>  
        <property name="testOnReturn"><value>false</value></property>  
        <property name="poolPreparedStatements"><value>true</value></property>  
        <property name="maxOpenPreparedStatements"><value>20</value></property>  
         -->  
    </bean>
    
        <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory_fangzhou" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_fangzhou" />
        <property name="configLocation" value="classpath:application-mybatis.xml"></property>
        <!-- 自动扫描mapping.xml文件 -->
        <property name="mapperLocations" value="classpath:mapping/*.xml"></property>
    </bean>
    
        <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.cy.test.dao.huanyi" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_fangzhou"></property>
    </bean>
    <!--数据库连接-fangzhou end-->
</beans>